# Generated by Django 2.1.4 on 2018-12-05 16:35

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('transcriptions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(blank=True, verbose_name='Identifier')),
                ('abbreviation', models.TextField(unique=True, verbose_name='Abbreviation')),
                ('biblindex_identifiers', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblindex identifiers')),
                ('biblia_patristica_identifiers', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblia patristica identifiers')),
                ('full_name', models.TextField(blank=True, verbose_name='Full Name')),
                ('born', models.IntegerField(null=True, verbose_name='Born')),
                ('born_is_approximate', models.NullBooleanField(verbose_name='Born approximate')),
                ('died', models.IntegerField(null=True, verbose_name='Died')),
                ('died_is_approximate', models.NullBooleanField(verbose_name='Died approximate')),
                ('language', models.TextField(choices=[('grc', 'Greek'), ('lat', 'Latin')], verbose_name='Language')),
                ('century_active', models.IntegerField(null=True, verbose_name='Century Active')),
                ('clavis', models.TextField(blank=True, verbose_name='Clavis')),
                ('place', models.TextField(blank=True, verbose_name='Place')),
                ('pseudonymous', models.NullBooleanField(verbose_name='Pseudonymous')),
                ('anonymous_collective', models.NullBooleanField(verbose_name='Anonymous')),
                ('transmitted_by_another', models.NullBooleanField(verbose_name='Transmitted in Another')),
                ('translated_source', models.NullBooleanField(verbose_name='Translated')),
                ('obsolete', models.NullBooleanField(verbose_name='Obsolete')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('created_for_biblindex', models.NullBooleanField(verbose_name='created_for_biblindex')),
            ],
            options={
                'ordering': ['abbreviation'],
            },
        ),
        migrations.CreateModel(
            name='Citation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('language', models.TextField(choices=[('grc', 'Greek'), ('lat', 'Latin')], verbose_name='Language')),
                ('chapter', models.IntegerField(verbose_name='Chapter')),
                ('verse', models.IntegerField(verbose_name='Verse')),
                ('biblical_reference', models.TextField(verbose_name='Ref')),
                ('biblical_reference_sortable', models.IntegerField(verbose_name='Sortable Ref')),
                ('work_reference', models.TextField(blank=True, verbose_name='Work ref')),
                ('page_reference', models.TextField(blank=True, verbose_name='Page')),
                ('line_reference', models.TextField(blank=True, verbose_name='Line')),
                ('citation_type', models.TextField(verbose_name='Citation type')),
                ('citation_reference_type', models.TextField(blank=True, verbose_name='Reference type')),
                ('citation_text', models.TextField(blank=True, verbose_name='Citation text')),
                ('search_string', models.TextField(blank=True, verbose_name='Search string')),
                ('manuscript_info', models.TextField(blank=True, verbose_name='MS info')),
                ('manuscript_variants', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='MS variants')),
                ('biblical_catena', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblical catena')),
                ('dependencies_string', models.TextField(blank=True, verbose_name='Dependencies string')),
                ('biblical_parallels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblical parallels')),
                ('work_reference_sortable', models.BigIntegerField(null=True, verbose_name='work_reference_sortable')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('status', models.TextField(verbose_name='Status')),
                ('sources', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Sources')),
                ('corrections_required', models.NullBooleanField(verbose_name='Corrections required')),
                ('correction_notes', models.TextField(blank=True, verbose_name='Correction notes')),
            ],
            options={
                'ordering': ['biblical_work__sort_value', 'chapter', 'verse', 'work__author__identifier', 'work__identifier', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Dependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.TextField(blank=True, verbose_name='Relation type')),
                ('work_reference', models.TextField(blank=True, verbose_name='Work ref')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='citations.Author', verbose_name='Author')),
                ('citation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='citations.Citation')),
            ],
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(blank=True, verbose_name='Identifier')),
                ('editor', models.TextField(blank=True, verbose_name='Editor')),
                ('year', models.IntegerField(null=True, verbose_name='Year')),
                ('place', models.TextField(blank=True, verbose_name='Place')),
                ('volume', models.TextField(blank=True, verbose_name='Volume')),
                ('independent_title', models.TextField(blank=True, verbose_name='Title')),
                ('superseded', models.NullBooleanField(verbose_name='Superseded')),
                ('page_information', models.TextField(blank=True, verbose_name='Page')),
                ('bham_shelfmark', models.TextField(blank=True, verbose_name='Bham Shelfmark')),
                ('legacy_edition', models.TextField(blank=True, verbose_name='Edition (legacy format)')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
            ],
            options={
                'ordering': ['identifier'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAuthor',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(blank=True, verbose_name='Identifier')),
                ('abbreviation', models.TextField(db_index=True, verbose_name='Abbreviation')),
                ('biblindex_identifiers', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblindex identifiers')),
                ('biblia_patristica_identifiers', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblia patristica identifiers')),
                ('full_name', models.TextField(blank=True, verbose_name='Full Name')),
                ('born', models.IntegerField(null=True, verbose_name='Born')),
                ('born_is_approximate', models.NullBooleanField(verbose_name='Born approximate')),
                ('died', models.IntegerField(null=True, verbose_name='Died')),
                ('died_is_approximate', models.NullBooleanField(verbose_name='Died approximate')),
                ('language', models.TextField(choices=[('grc', 'Greek'), ('lat', 'Latin')], verbose_name='Language')),
                ('century_active', models.IntegerField(null=True, verbose_name='Century Active')),
                ('clavis', models.TextField(blank=True, verbose_name='Clavis')),
                ('place', models.TextField(blank=True, verbose_name='Place')),
                ('pseudonymous', models.NullBooleanField(verbose_name='Pseudonymous')),
                ('anonymous_collective', models.NullBooleanField(verbose_name='Anonymous')),
                ('transmitted_by_another', models.NullBooleanField(verbose_name='Transmitted in Another')),
                ('translated_source', models.NullBooleanField(verbose_name='Translated')),
                ('obsolete', models.NullBooleanField(verbose_name='Obsolete')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('created_for_biblindex', models.NullBooleanField(verbose_name='created_for_biblindex')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical author',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCitation',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('language', models.TextField(choices=[('grc', 'Greek'), ('lat', 'Latin')], verbose_name='Language')),
                ('chapter', models.IntegerField(verbose_name='Chapter')),
                ('verse', models.IntegerField(verbose_name='Verse')),
                ('biblical_reference', models.TextField(verbose_name='Ref')),
                ('biblical_reference_sortable', models.IntegerField(verbose_name='Sortable Ref')),
                ('work_reference', models.TextField(blank=True, verbose_name='Work ref')),
                ('page_reference', models.TextField(blank=True, verbose_name='Page')),
                ('line_reference', models.TextField(blank=True, verbose_name='Line')),
                ('citation_type', models.TextField(verbose_name='Citation type')),
                ('citation_reference_type', models.TextField(blank=True, verbose_name='Reference type')),
                ('citation_text', models.TextField(blank=True, verbose_name='Citation text')),
                ('search_string', models.TextField(blank=True, verbose_name='Search string')),
                ('manuscript_info', models.TextField(blank=True, verbose_name='MS info')),
                ('manuscript_variants', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='MS variants')),
                ('biblical_catena', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblical catena')),
                ('dependencies_string', models.TextField(blank=True, verbose_name='Dependencies string')),
                ('biblical_parallels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblical parallels')),
                ('work_reference_sortable', models.BigIntegerField(null=True, verbose_name='work_reference_sortable')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('status', models.TextField(verbose_name='Status')),
                ('sources', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Sources')),
                ('corrections_required', models.NullBooleanField(verbose_name='Corrections required')),
                ('correction_notes', models.TextField(blank=True, verbose_name='Correction notes')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical citation',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDependency',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('relation_type', models.TextField(blank=True, verbose_name='Relation type')),
                ('work_reference', models.TextField(blank=True, verbose_name='Work ref')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Author')),
                ('citation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Citation')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical dependency',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEdition',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(blank=True, verbose_name='Identifier')),
                ('editor', models.TextField(blank=True, verbose_name='Editor')),
                ('year', models.IntegerField(null=True, verbose_name='Year')),
                ('place', models.TextField(blank=True, verbose_name='Place')),
                ('volume', models.TextField(blank=True, verbose_name='Volume')),
                ('independent_title', models.TextField(blank=True, verbose_name='Title')),
                ('superseded', models.NullBooleanField(verbose_name='Superseded')),
                ('page_information', models.TextField(blank=True, verbose_name='Page')),
                ('bham_shelfmark', models.TextField(blank=True, verbose_name='Bham Shelfmark')),
                ('legacy_edition', models.TextField(blank=True, verbose_name='Edition (legacy format)')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical edition',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOnlineCorpus',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(verbose_name='Identifier')),
                ('abbreviation', models.TextField(verbose_name='Abbreviation')),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('url', models.TextField(blank=True, verbose_name='URL')),
                ('access', models.TextField(blank=True, verbose_name='Access')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical online corpus',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrivateCitation',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('language', models.TextField(choices=[('grc', 'Greek'), ('lat', 'Latin')], verbose_name='Language')),
                ('chapter', models.IntegerField(verbose_name='Chapter')),
                ('verse', models.IntegerField(verbose_name='Verse')),
                ('biblical_reference', models.TextField(verbose_name='Ref')),
                ('biblical_reference_sortable', models.IntegerField(verbose_name='Sortable Ref')),
                ('work_reference', models.TextField(blank=True, verbose_name='Work ref')),
                ('page_reference', models.TextField(blank=True, verbose_name='Page')),
                ('line_reference', models.TextField(blank=True, verbose_name='Line')),
                ('citation_type', models.TextField(verbose_name='Citation type')),
                ('citation_reference_type', models.TextField(blank=True, verbose_name='Reference type')),
                ('citation_text', models.TextField(blank=True, verbose_name='Citation text')),
                ('search_string', models.TextField(blank=True, verbose_name='Search string')),
                ('manuscript_info', models.TextField(blank=True, verbose_name='MS info')),
                ('manuscript_variants', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='MS variants')),
                ('biblical_catena', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblical catena')),
                ('dependencies_string', models.TextField(blank=True, verbose_name='Dependencies string')),
                ('biblical_parallels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblical catena')),
                ('work_reference_sortable', models.BigIntegerField(null=True, verbose_name='work_reference_sortable')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('private_comments', models.TextField(blank=True, verbose_name='Private comments')),
                ('status', models.TextField(verbose_name='status')),
                ('sources', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Sources')),
                ('copied_to_private_time', models.DateTimeField(blank=True, null=True, verbose_name='Copied to private time')),
                ('id_of_public_version', models.IntegerField(blank=True, null=True, verbose_name='ID of public version')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical private citation',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrivateDependency',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('relation_type', models.TextField(blank=True, verbose_name='Relation type')),
                ('work_reference', models.TextField(blank=True, verbose_name='Work ref')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Author')),
            ],
            options={
                'verbose_name': 'historical private dependency',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSeries',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(verbose_name='Identifier')),
                ('abbreviation', models.TextField(verbose_name='Abbreviation')),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical series',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWork',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(blank=True, verbose_name='Identifier')),
                ('abbreviation', models.TextField(verbose_name='Abbreviation')),
                ('biblindex_identifiers', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblindex identifiers')),
                ('biblia_patristica_identifiers', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblica patristica identifiers')),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('language', models.TextField(choices=[('grc', 'Greek'), ('lat', 'Latin')], verbose_name='Language')),
                ('year', models.IntegerField(null=True, verbose_name='Year')),
                ('year_is_approximate', models.NullBooleanField(verbose_name='Year approximate')),
                ('clavis', models.TextField(blank=True, verbose_name='Clavis')),
                ('translated_source', models.NullBooleanField(verbose_name='Translated')),
                ('transmitted_in_another', models.NullBooleanField(verbose_name='Transmitted in Another')),
                ('obsolete', models.NullBooleanField(verbose_name='Obsolete')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('created_for_biblindex', models.NullBooleanField(verbose_name='created_for_biblindex')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Author')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical work',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='OnlineCorpus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(verbose_name='Identifier')),
                ('abbreviation', models.TextField(verbose_name='Abbreviation')),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('url', models.TextField(blank=True, verbose_name='URL')),
                ('access', models.TextField(blank=True, verbose_name='Access')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
            ],
            options={
                'ordering': ['abbreviation'],
            },
        ),
        migrations.CreateModel(
            name='PrivateCitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('language', models.TextField(choices=[('grc', 'Greek'), ('lat', 'Latin')], verbose_name='Language')),
                ('chapter', models.IntegerField(verbose_name='Chapter')),
                ('verse', models.IntegerField(verbose_name='Verse')),
                ('biblical_reference', models.TextField(verbose_name='Ref')),
                ('biblical_reference_sortable', models.IntegerField(verbose_name='Sortable Ref')),
                ('work_reference', models.TextField(blank=True, verbose_name='Work ref')),
                ('page_reference', models.TextField(blank=True, verbose_name='Page')),
                ('line_reference', models.TextField(blank=True, verbose_name='Line')),
                ('citation_type', models.TextField(verbose_name='Citation type')),
                ('citation_reference_type', models.TextField(blank=True, verbose_name='Reference type')),
                ('citation_text', models.TextField(blank=True, verbose_name='Citation text')),
                ('search_string', models.TextField(blank=True, verbose_name='Search string')),
                ('manuscript_info', models.TextField(blank=True, verbose_name='MS info')),
                ('manuscript_variants', django.contrib.postgres.fields.jsonb.JSONField(null=True, verbose_name='MS variants')),
                ('biblical_catena', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblical catena')),
                ('dependencies_string', models.TextField(blank=True, verbose_name='Dependencies string')),
                ('biblical_parallels', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblical catena')),
                ('work_reference_sortable', models.BigIntegerField(null=True, verbose_name='work_reference_sortable')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('private_comments', models.TextField(blank=True, verbose_name='Private comments')),
                ('status', models.TextField(verbose_name='status')),
                ('sources', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Sources')),
                ('copied_to_private_time', models.DateTimeField(blank=True, null=True, verbose_name='Copied to private time')),
                ('id_of_public_version', models.IntegerField(blank=True, null=True, verbose_name='ID of public version')),
            ],
            options={
                'ordering': ['biblical_work__sort_value', 'chapter', 'verse', 'work__author__identifier', 'work__identifier', 'id'],
            },
        ),
        migrations.CreateModel(
            name='PrivateDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.TextField(blank=True, verbose_name='Relation type')),
                ('work_reference', models.TextField(blank=True, verbose_name='Work ref')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='citations.Author', verbose_name='Author')),
                ('citation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='citations.PrivateCitation')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.TextField(unique=True, verbose_name='Identifier')),
                ('name', models.TextField(verbose_name='Name')),
                ('language', models.TextField(verbose_name='Language')),
                ('form_settings', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('submit_settings', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('edition_lookup', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('preselects', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('base_text_siglum', models.TextField(verbose_name='Base text siglum')),
                ('base_text_label', models.TextField(verbose_name='Base text label')),
                ('public', models.BooleanField(verbose_name='Public')),
                ('sources', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Sources')),
                ('author_ids', models.ManyToManyField(to='citations.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(verbose_name='Identifier')),
                ('abbreviation', models.TextField(verbose_name='Abbreviation')),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
            ],
            options={
                'ordering': ['abbreviation'],
            },
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(null=True)),
                ('created_by', models.TextField(blank=True, verbose_name='created_by')),
                ('last_modified_time', models.DateTimeField(null=True)),
                ('last_modified_by', models.TextField(blank=True, verbose_name='Last_modified_by')),
                ('version_number', models.IntegerField(null=True)),
                ('identifier', models.TextField(blank=True, verbose_name='Identifier')),
                ('abbreviation', models.TextField(verbose_name='Abbreviation')),
                ('biblindex_identifiers', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblindex identifiers')),
                ('biblia_patristica_identifiers', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), null=True, size=None, verbose_name='Biblica patristica identifiers')),
                ('title', models.TextField(blank=True, verbose_name='Title')),
                ('language', models.TextField(choices=[('grc', 'Greek'), ('lat', 'Latin')], verbose_name='Language')),
                ('year', models.IntegerField(null=True, verbose_name='Year')),
                ('year_is_approximate', models.NullBooleanField(verbose_name='Year approximate')),
                ('clavis', models.TextField(blank=True, verbose_name='Clavis')),
                ('translated_source', models.NullBooleanField(verbose_name='Translated')),
                ('transmitted_in_another', models.NullBooleanField(verbose_name='Transmitted in Another')),
                ('obsolete', models.NullBooleanField(verbose_name='Obsolete')),
                ('comments', models.TextField(blank=True, verbose_name='Comments')),
                ('created_for_biblindex', models.NullBooleanField(verbose_name='created_for_biblindex')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='works', to='citations.Author', verbose_name='Author')),
                ('other_possible_authors', models.ManyToManyField(blank=True, related_name='Authors', to='citations.Author', verbose_name='Other Possible Authors')),
            ],
            options={
                'ordering': ['abbreviation'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='biblical_work',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='transcriptions.Work', verbose_name='Biblical work'),
        ),
        migrations.AddField(
            model_name='project',
            name='edition_transcribers',
            field=models.ManyToManyField(related_name='edition_transcribers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='online_transcribers',
            field=models.ManyToManyField(related_name='online_transcribers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='privatedependency',
            name='work',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='citations.Work', verbose_name='Work'),
        ),
        migrations.AddField(
            model_name='privatecitation',
            name='biblical_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transcriptions.Work', verbose_name='Biblical work'),
        ),
        migrations.AddField(
            model_name='privatecitation',
            name='edition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='citations.Edition', verbose_name='Edition'),
        ),
        migrations.AddField(
            model_name='privatecitation',
            name='onlinecorpus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='citations.OnlineCorpus', verbose_name='OnlineCorpus'),
        ),
        migrations.AddField(
            model_name='privatecitation',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='citations.Project'),
        ),
        migrations.AddField(
            model_name='privatecitation',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='citations.Work', verbose_name='Work'),
        ),
        migrations.AddField(
            model_name='historicalprivatedependency',
            name='citation',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.PrivateCitation'),
        ),
        migrations.AddField(
            model_name='historicalprivatedependency',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalprivatedependency',
            name='work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Work'),
        ),
        migrations.AddField(
            model_name='historicalprivatecitation',
            name='biblical_work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='transcriptions.Work'),
        ),
        migrations.AddField(
            model_name='historicalprivatecitation',
            name='edition',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Edition'),
        ),
        migrations.AddField(
            model_name='historicalprivatecitation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalprivatecitation',
            name='onlinecorpus',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.OnlineCorpus'),
        ),
        migrations.AddField(
            model_name='historicalprivatecitation',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Project'),
        ),
        migrations.AddField(
            model_name='historicalprivatecitation',
            name='work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Work'),
        ),
        migrations.AddField(
            model_name='historicaledition',
            name='onlinecorpus',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.OnlineCorpus'),
        ),
        migrations.AddField(
            model_name='historicaledition',
            name='series',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Series'),
        ),
        migrations.AddField(
            model_name='historicaledition',
            name='work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Work'),
        ),
        migrations.AddField(
            model_name='historicaldependency',
            name='work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Work'),
        ),
        migrations.AddField(
            model_name='historicalcitation',
            name='biblical_work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='transcriptions.Work'),
        ),
        migrations.AddField(
            model_name='historicalcitation',
            name='edition',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Edition'),
        ),
        migrations.AddField(
            model_name='historicalcitation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcitation',
            name='onlinecorpus',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.OnlineCorpus'),
        ),
        migrations.AddField(
            model_name='historicalcitation',
            name='work',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='citations.Work'),
        ),
        migrations.AddField(
            model_name='edition',
            name='onlinecorpus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='editions', to='citations.OnlineCorpus', verbose_name='OnlineCorpus'),
        ),
        migrations.AddField(
            model_name='edition',
            name='series',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='editions', to='citations.Series', verbose_name='Series'),
        ),
        migrations.AddField(
            model_name='edition',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='editions', to='citations.Work', verbose_name='Work'),
        ),
        migrations.AddField(
            model_name='dependency',
            name='work',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='citations.Work', verbose_name='Work'),
        ),
        migrations.AddField(
            model_name='citation',
            name='biblical_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transcriptions.Work', verbose_name='Biblical work'),
        ),
        migrations.AddField(
            model_name='citation',
            name='edition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='citations', to='citations.Edition', verbose_name='Edition'),
        ),
        migrations.AddField(
            model_name='citation',
            name='onlinecorpus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='citations', to='citations.OnlineCorpus', verbose_name='OnlineCorpus'),
        ),
        migrations.AddField(
            model_name='citation',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='citations', to='citations.Work', verbose_name='Work'),
        ),
    ]
